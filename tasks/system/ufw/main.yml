---

- name: assert | ufw | assert required inputs
  tags: assert,ufw
  ansible.builtin.import_tasks: assertions/assert.yml
  run_once: yes
  delegate_to: localhost


- name: system | ufw | install package
  ansible.builtin.apt:
    state: latest
    name: ufw
  when:
    - ufw is defined

- name: system | ufw | configure logging
  community.general.ufw:
    logging: "{{ ufw.logging }}"
  when:
    - ufw is defined
    - ufw.logging is defined


- name: system | ufw | apply profiles
  community.general.ufw:
    name: "{{ profile.name }}"
    rule: "{{ profile.rule }}"
    delete: "{{ profile.delete | default(false) }}"
  loop: "{{ ufw.profiles }}"
  loop_control:
    loop_var: profile
  when: 
    - ufw is defined
    - ufw.profiles is defined


- name: system | ufw | set incoming rules
  community.general.ufw:
    rule: "{{ rule.policy }}"
    delete: "{{ rule.delete | default(false) }}"
    direction: "in"
    interface: "{{ rule.interface | default('any') }}"
    proto: "{{ rule.protocol | default('any') }}"
    from_ip: "{{ rule.from_ip | default('any') }}"
    to_port: "{{ rule.to_port }}"
    comment: "{{ rule.comment | default('') }}"
  loop: "{{ ufw.incoming }}"
  loop_control:
    loop_var: rule
  when: 
    - ufw is defined
    - ufw.incoming is defined


- name: system | ufw | set outgoing rules
  community.general.ufw:
    rule: "{{ rule.policy }}"
    delete: "{{ rule.delete | default(false) }}"
    direction: "out"
    interface: "{{ rule.interface | default('any') }}"
    proto: "{{ rule.protocol | default('any') }}"
    to_ip: "{{ rule.to_ip | default('any') }}"
    from_port: "{{ rule.from_port }}"
    comment: "{{ rule.comment | default('') }}"
  loop: "{{ ufw.outgoing }}"
  loop_control:
    loop_var: rule
  when: 
    - ufw is defined
    - ufw.outgoing is defined



- name: system | ufw | set default for incoming
  community.general.ufw:
    direction: "incoming"
    policy: "{{ ufw.defaults.incoming }}"
  when:
    - ufw is defined
    - ufw.defaults is defined
    - ufw.defaults.incoming is defined


- name: system | ufw | set default for outgoing
  community.general.ufw:
    direction: "outgoing"
    policy: "{{ ufw.defaults.outgoing }}"
  when:
    - ufw is defined
    - ufw.defaults is defined
    - ufw.defaults.outgoing is defined


- name: system | ufw | change state
  community.general.ufw:
    state: "{{ ufw.state }}"
  when:
    - ufw is defined
    - ufw.state is defined
